# Copyright 2021 Contributors to the EdgeNet project.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Namespace
metadata:
  name: edgenet
---
apiVersion: v1
kind: Secret
metadata:
  name: kubeconfig-secret
  namespace: edgenet
type: Opaque
stringData:
  config : |
    # Provide the certificate authority of your cluster along with the IP address below.
    # The address that you will provide at the server field should be like https://51.75.127.152:6443.
    # apiVersion: v1
    # clusters:
    # - cluster:
    #     certificate-authority-data: <CA>
    #     server: <kube-apiserver>
    #   name: kubernetes
    # contexts: null
    # current-context: null
    # kind: Config
    # preferences: {}
    # users: null
---
apiVersion: v1
kind: Secret
metadata:
  name: configs-secret
  namespace: edgenet
type: Opaque
stringData:
  headnode.yaml: |
    # DNS should contain the root domain consisting of domain name and top-level domain.
    # dns: "<Root domain>"
    # ip: "<IP address of the control plane node>"
  smtp.yaml: |
    # SMTP settings for mailer service. The 'to' field indicates the email address to receive the emails
    # that concerns the cluster administration.
    # host: ""
    # port: ""
    # from: ""
    # username : ""
    # password : ""
    # to: ""
  console.yaml: |
    # URL to the console if you deploy on your cluster. For example, https://console.edge-net.org.
    # url: "<URL of the console>"
  namecheap.yaml: |
    # Provide the namecheap credentials for DNS records.
    # app: ""
    # apiUser : ""
    # apiToken : ""
    # username : ""
#---
# Provide the Private and Public SSH keys of the control plane node to enable node contribution feature.
#apiVersion: v1
#kind: Secret
#metadata:
#  name: ssh-key-secret
#  namespace: edgenet
#type: Opaque
#data:
#  id_rsa: <SSH Private Key of the control plane node>
#  id_rsa.pub: <SSH Public Key of the control plane node>
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: acceptableusepolicies.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Accepted
          type: boolean
          jsonPath: .spec.accepted
        - name: Expiry
          type: string
          jsonPath: .status.expiry
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - accepted
              properties:
                email:
                  type: string
                accepted:
                  type: boolean
            status:
              type: object
              properties:
                tenant:
                  type: string
                expiry:
                  type: string
                  format: dateTime
                  nullable: true
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Cluster
  names:
    plural: acceptableusepolicies
    singular: acceptableusepolicy
    kind: AcceptableUsePolicy
    shortNames:
      - aup
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: emailverifications.registration.edgenet.io
spec:
  group: registration.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Email
          type: string
          jsonPath: .spec.email
        - name: Verified
          type: boolean
          jsonPath: .spec.verified
        - name: Expiry
          type: string
          jsonPath: .status.expiry
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - email
                - verified
              properties:
                email:
                  type: string
                verified:
                  type: boolean
            status:
              type: object
              properties:
                expiry:
                  type: string
                  format: dateTime
                  nullable: true
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Cluster
  names:
    plural: emailverifications
    singular: emailverification
    kind: EmailVerification
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodecontributions.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .spec.host
        - name: Port
          type: integer
          jsonPath: .spec.port
        - name: Enabled
          type: boolean
          jsonPath: .spec.enabled
        - name: Status
          type: string
          jsonPath: .status.state
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - host
                - port
                - enabled
              properties:
                tenant:
                  type: string
                  nullable: true
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                host:
                  type: string
                port:
                  type: integer
                  minimum: 1
                user:
                  type: string
                enabled:
                  type: boolean
                limitations:
                  type: array
                  nullable: true
                  items:
                    type: object
                    properties:
                      kind:
                        type: string
                        enum:
                          - Tenant
                          - Namespace
                      identifier:
                        type: string
                        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
            status:
              type: object
              properties:
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Cluster
  names:
    plural: nodecontributions
    singular: nodecontribution
    kind: NodeContribution
    shortNames:
      - nc
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: selectivedeployments.apps.edgenet.io
spec:
  group: apps.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.ready
        - name: Status
          type: string
          jsonPath: .status.state
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - workloads
                - selector
              properties:
                workloads:
                  type: object
                  properties:
                    deployment:
                      type: array
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      nullable: true
                    daemonset:
                      type: array
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      nullable: true
                    statefulset:
                      type: array
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      nullable: true
                    job:
                      type: array
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      nullable: true
                    cronjob:
                      type: array
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      nullable: true
                selector:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        enum:
                          - City
                          - State
                          - Country
                          - Continent
                          - Polygon
                      value:
                        type: array
                        items:
                          type: string
                      operator:
                        type: string
                        enum:
                          - In
                          - NotIn
                      quantity:
                        type: integer
                        description: The count of nodes that will be picked for this selector.
                        minimum: 1
                        nullable: true
                  minimum: 1
                recovery:
                  type: boolean
            status:
              type: object
              properties:
                ready:
                  type: string
                state:
                  type: string
                message:
                  type: array
                  items:
                    type: string
  scope: Namespaced
  names:
    plural: selectivedeployments
    singular: selectivedeployment
    kind: SelectiveDeployment
    shortNames:
      - sd
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: subnamespaces.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          type: string
          jsonPath: .status.state
        - name: CPU Allocation
          type: string
          jsonPath: .spec.resources.cpu
        - name: Memory Allocation
          type: string
          jsonPath: .spec.resources.memory
        - name: Network Policy Inheritance
          type: string
          jsonPath: .spec.inheritance.networkpolicy
        - name: RBAC Inheritance
          type: string
          jsonPath: .spec.inheritance.rbac
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - resources
              properties:
                resources:
                  type: object
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                inheritance:
                  type: object
                  properties:
                    networkpolicy:
                      type: boolean
                      default: true
                    rbac:
                      type: boolean
                      default: true
                expiry:
                  type: string
                  format: dateTime
                  nullable: true
            status:
              type: object
              properties:
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Namespaced
  names:
    plural: subnamespaces
    singular: subnamespace
    kind: SubNamespace
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tenants.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Official Name
          type: string
          jsonPath: .spec.fullname
        - name: Short Name
          type: string
          jsonPath: .spec.shortname
        - name: URL
          type: string
          jsonPath: .spec.url
        - name: City
          type: string
          jsonPath: .spec.address.city
        - name: Country
          type: string
          jsonPath: .spec.address.country
        - name: Enabled
          type: boolean
          jsonPath: .spec.enabled
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - fullname
                - shortname
                - url
                - address
                - contact
                - enabled
              properties:
                fullname:
                  type: string
                shortname:
                  type: string
                url:
                  type: string
                address:
                  type: object
                  required:
                    - street
                    - zip
                    - city
                    - country
                  properties:
                    street:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    region:
                      type: string
                      description: region or state
                    country:
                      type: string
                contact:
                  type: object
                  required:
                    - firstname
                    - lastname
                    - email
                    - phone
                  properties:
                    firstname:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                enabled:
                  type: boolean
            status:
              type: object
              properties:
                nodecontribution:
                  type: array
                  nullable: true
                  items:
                    type: string
                registrationrequest:
                  type: array
                  nullable: true
                  items:
                    type: string
                state:
                  type: string
                message:
                  type: array
                  items:
                    type: string
  scope: Cluster
  names:
    plural: tenants
    singular: tenant
    kind: Tenant
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tenantrequests.registration.edgenet.io
spec:
  group: registration.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Official Name
          type: string
          jsonPath: .spec.fullname
        - name: Short Name
          type: string
          jsonPath: .spec.shortname
        - name: URL
          type: string
          jsonPath: .spec.url
        - name: City
          type: string
          jsonPath: .spec.address.city
        - name: Country
          type: string
          jsonPath: .spec.address.country
        - name: Expiry
          type: string
          jsonPath: .status.expiry
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - fullname
                - shortname
                - url
                - address
                - contact
              properties:
                fullname:
                  type: string
                shortname:
                  type: string
                url:
                  type: string
                address:
                  type: object
                  required:
                    - street
                    - zip
                    - city
                    - country
                  properties:
                    street:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    region:
                      type: string
                      description: region or state
                    country:
                      type: string
                contact:
                  type: object
                  required:
                    - username
                    - firstname
                    - lastname
                    - email
                    - phone
                  properties:
                    username:
                      type: string
                      pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    firstname:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                approved:
                  type: boolean
            status:
              type: object
              properties:
                emailverified:
                  type: boolean
                expiry:
                  type: string
                  format: dateTime
                  nullable: true
                state:
                  type: string
                message:
                  type: array
                  items:
                    type: string
  scope: Cluster
  names:
    plural: tenantrequests
    singular: tenantrequest
    kind: TenantRequest
    shortNames:
      - trr
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tenantresourcequotas.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - claim
              properties:
                claim:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - cpu
                      - memory
                    properties:
                      name:
                        type: string
                        enum:
                          - Default
                          - Privilege
                          - Reward
                      cpu:
                        type: string
                      memory:
                        type: string
                      expiry:
                        type: string
                        format: date
                        nullable: true
                drop:
                  type: array
                  nullable: true
                  items:
                    type: object
                    required:
                      - name
                      - cpu
                      - memory
                    properties:
                      name:
                        type: string
                        enum:
                          - Equilibrate
                          - Temporary
                      cpu:
                        type: string
                      memory:
                        type: string
                      expiry:
                        type: string
                        format: date
            status:
              type: object
              properties:
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Cluster
  names:
    plural: tenantresourcequotas
    singular: tenantresourcequota
    kind: TenantResourceQuota
    shortNames:
      - trq
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: userrequests.registration.edgenet.io
spec:
  group: registration.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: "Tenant"
          type: string
          jsonPath: .spec.tenant
        - name: "First Name"
          type: string
          jsonPath: .spec.firstname
        - name: "Last Name"
          type: string
          jsonPath: .spec.lastname
        - name: Email
          type: string
          jsonPath: .spec.email
        - name: Expiry
          type: string
          jsonPath: .status.expiry
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - tenant
                - firstname
                - lastname
                - email
              properties:
                tenant:
                  type: string
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                firstname:
                  type: string
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                lastname:
                  type: string
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum:
                    - Owner
                    - Admin
                    - Collaborator
                  default: Collaborator
                approved:
                  type: boolean
            status:
              type: object
              properties:
                emailverified:
                  type: boolean
                expiry:
                  type: string
                  format: dateTime
                  nullable: true
                state:
                  type: string
                message:
                  type: array
                  nullable: true
                  items:
                    type: string
  scope: Cluster
  names:
    plural: userrequests
    singular: userrequest
    kind: UserRequest
    shortNames:
      - urr
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: vpnpeers.networking.edgenet.io
spec:
  group: networking.edgenet.io
  versions:
    - name: v1alpha
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Address-V4
          type: string
          jsonPath: .spec.addressV4
        - name: Address-V6
          type: string
          jsonPath: .spec.addressV6
        - name: Endpoint
          type: string
          jsonPath: .spec.endpointAddress
        - name: Port
          type: string
          jsonPath: .spec.endpointPort
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - addressV4
                - addressV6
                - publicKey
              properties:
                addressV4:
                  type: string
                  pattern: '^[0-9.]+$'
                  description: The IPv4 address assigned to the node's VPN interface.
                addressV6:
                  type: string
                  pattern: '^[a-f0-9:]+$'
                  description: The IPv6 address assigned to the node's VPN interface.
                endpointAddress:
                  type: string
                  pattern: '^[a-f0-9.:]+$'
                  nullable: true
                  description: The public IPv4/v6 address of the node. Required for NAT-NAT communications.
                endpointPort:
                  type: integer
                  minimum: 1
                  nullable: true
                  description: The port on which WireGuard is listening. Required for NAT-NAT communications.
                publicKey:
                  type: string
                  description: The WireGuard public key of the node's VPN interface (Base64 encoded).
  scope: Cluster
  names:
    plural: vpnpeers
    singular: vpnpeer
    kind: VPNPeer
    shortNames:
      - vpn
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: acceptableusepolicy
  name: acceptableusepolicy
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: acceptableusepolicy
  name: edgenet:service:acceptableusepolicy
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["acceptableusepolicies", "acceptableusepolicies/status"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: acceptableusepolicy
  name: edgenet:service:acceptableusepolicy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:acceptableusepolicy
subjects:
- kind: ServiceAccount
  name: acceptableusepolicy
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: acceptableusepolicy
  name: acceptableusepolicy
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: acceptableusepolicy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: acceptableusepolicy
    spec:
      containers:
      - command:
        - ./acceptableusepolicy
        image: bsenel/acceptableusepolicy:v1.0.0
        imagePullPolicy: Always
        name: acceptableusepolicy
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: acceptableusepolicy
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: emailverification
  name: emailverification
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: emailverification
  name: edgenet:service:emailverification
rules:
- apiGroups: ["registration.edgenet.io"]
  resources: ["emailverifications", "emailverifications/status"]
  verbs: ["*"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests"]
  verbs: ["get"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests/status"]
  verbs: ["get", "update"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["userrequests"]
  verbs: ["get"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["userrequests/status"]
  verbs: ["get", "update"]
- apiGroups: ["core.edgenet.io"]
  resources: ["acceptableusepolicies"]
  verbs: ["get", "list", "update"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles","clusterrolebindings", "roles","rolebindings"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: emailverification
  name: edgenet:service:emailverification
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:emailverification
subjects:
- kind: ServiceAccount
  name: emailverification
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: emailverification
  name: emailverification
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: emailverification
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: emailverification
    spec:
      containers:
      - command:
        - ./emailverification
        image: bsenel/emailverification:v1.0.0
        imagePullPolicy: Always
        name: emailverification
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: emailverification
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: nodecontribution
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: edgenet:service:nodecontribution
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["nodecontributions", "nodecontributions/status"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: edgenet:service:nodecontribution
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:nodecontribution
subjects:
- kind: ServiceAccount
  name: nodecontribution
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: nodecontribution
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: nodecontribution
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: nodecontribution
    spec:
      containers:
      - command:
        - ./nodecontribution
        image: bsenel/nodecontribution:v1.0.0
        imagePullPolicy: Always
        name: nodecontribution
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/ca.crt
          name: kubernetes
          readOnly: true
        - name: ssh
          readOnly: true
          mountPath: /root/.ssh/
        - name: configs
          readOnly: true
          mountPath: /root/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: nodecontribution
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: kubernetes
        hostPath:
          path: /etc/kubernetes/pki/ca.crt
          type: File
      - name: ssh
        secret:
          secretName: ssh-key-secret
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: nodelabeler
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: edgenet:service:nodelabeler
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: edgenet:service:nodelabeler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:nodelabeler
subjects:
- kind: ServiceAccount
  name: nodelabeler
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: nodelabeler
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: nodelabeler
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: nodelabeler
    spec:
      containers:
      - command:
        - ./nodelabeler
        image: bsenel/nodelabeler:v1.0.0
        imagePullPolicy: Always
        name: nodelabeler
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: nodelabeler
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: selectivedeployment
  name: selectivedeployment
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: selectivedeployment
  name: edgenet:service:selectivedeployment
rules:
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments", "selectivedeployments/status"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "statefulsets"]
  verbs: ["get", "watch", "list", "create", "patch", update", "delete"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["get", "watch", "list", "create", "patch", update", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: selectivedeployment
  name: edgenet:service:selectivedeployment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:selectivedeployment
subjects:
- kind: ServiceAccount
  name: selectivedeployment
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: selectivedeployment
  name: selectivedeployment
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: selectivedeployment
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: selectivedeployment
    spec:
      containers:
      - command:
        - ./selectivedeployment
        image: bsenel/selectivedeployment:v1.0.0
        imagePullPolicy: Always
        name: selectivedeployment
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: selectivedeployment
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: subnamespace
  name: subnamespace
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: subnamespace
  name: edgenet:service:subnamespace
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces", "subnamespaces/status"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "create", "delete"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["get", "create", "update"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles","rolebindings"]
  verbs: ["get", "list", "create"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: subnamespace
  name: edgenet:service:subnamespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:subnamespace
subjects:
- kind: ServiceAccount
  name: subnamespace
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: subnamespace
  name: subnamespace
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: subnamespace
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: subnamespace
    spec:
      containers:
      - command:
        - ./subnamespace
        image: bsenel/subnamespace:v1.0.0
        imagePullPolicy: Always
        name: subnamespace
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: subnamespace
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: tenant
  name: tenant
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: tenant
  name: edgenet:service:tenant
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants", "tenants/status", "subnamespaces", "acceptableusepolicies"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenantresourcequotas"]
  verbs: ["create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces/status", "acceptableusepolicies/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests"]
  verbs: ["get"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments"]
  verbs: ["*"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "create", "update", "deletecollection"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval"]
  verbs: ["update"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  verbs: ["approve"]
- apiGroups: [""]
  resources: ["configmaps", "endpoints", "persistentvolumeclaims", "pods", "pods/exec", "pods/log", "pods/attach", "replicationcontrollers", "services", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "ingresses", "networkpolicies", "replicasets", "replicationcontrollers"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["controllerrevisions"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: tenant
  name: edgenet:service:tenant
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:tenant
subjects:
- kind: ServiceAccount
  name: tenant
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: tenant
  name: tenant
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: tenant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: tenant
    spec:
      containers:
      - command:
        - ./tenant
        image: bsenel/tenant:v1.0.0
        imagePullPolicy: Always
        name: tenant
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
        - name: kubeconfig
          readOnly: true
          mountPath: /root/.kube/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: tenant
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
      - name: kubeconfig
        secret:
          secretName: kubeconfig-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: tenantregistrationrequest
  name: tenantregistrationrequest
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: tenantregistrationrequest
  name: edgenet:service:tenantregistrationrequest
rules:
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests", "tenantrequests/status"]
  verbs: ["*"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["emailverifications"]
  verbs: ["create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get", "create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces", "acceptableusepolicies"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces/status", "acceptableusepolicies/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments"]
  verbs: ["*"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "create", "update", "deletecollection"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval"]
  verbs: ["update"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  verbs: ["approve"]
- apiGroups: [""]
  resources: ["configmaps", "endpoints", "persistentvolumeclaims", "pods", "pods/exec", "pods/log", "pods/attach", "replicationcontrollers", "services", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "ingresses", "networkpolicies", "replicasets", "replicationcontrollers"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["controllerrevisions"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: tenantregistrationrequest
  name: edgenet:service:tenantregistrationrequest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:tenantregistrationrequest
subjects:
- kind: ServiceAccount
  name: tenantregistrationrequest
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: tenantregistrationrequest
  name: tenantregistrationrequest
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: tenantregistrationrequest
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: tenantregistrationrequest
    spec:
      containers:
      - command:
        - ./tenantregistrationrequest
        image: bsenel/tenantregistrationrequest:v1.0.0
        imagePullPolicy: Always
        name: tenantregistrationrequest
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
        - name: kubeconfig
          readOnly: true
          mountPath: /root/.kube/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: tenantregistrationrequest
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
      - name: kubeconfig
        secret:
          secretName: kubeconfig-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: tenantresourcequota
  name: tenantresourcequota
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: tenantresourcequota
  name: edgenet:service:tenantresourcequota
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["tenantresourcequotas", "tenantresourcequotas/status"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces"]
  verbs: ["get", "list", "delete", "deletecollection"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["get", "list", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: tenantresourcequota
  name: edgenet:service:tenantresourcequota
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:tenantresourcequota
subjects:
- kind: ServiceAccount
  name: tenantresourcequota
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: tenantresourcequota
  name: tenantresourcequota
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: tenantresourcequota
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: tenantresourcequota
    spec:
      containers:
      - command:
        - ./tenantresourcequota
        image: bsenel/tenantresourcequota:v1.0.0
        imagePullPolicy: Always
        name: tenantresourcequota
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: tenantresourcequota
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: userregistrationrequest
  name: userregistrationrequest
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: userregistrationrequest
  name: edgenet:service:userregistrationrequest
rules:
- apiGroups: ["registration.edgenet.io"]
  resources: ["userrequests", "userrequests/status"]
  verbs: ["*"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["emailverifications"]
  verbs: ["create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces", "acceptableusepolicies"]
  verbs: ["*"]
- apiGroups: ["core.edgenet.io"]
  resources: ["subnamespaces/status", "acceptableusepolicies/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments"]
  verbs: ["*"]
- apiGroups: ["apps.edgenet.io"]
  resources: ["selectivedeployments/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles","clusterrolebindings"]
  verbs: ["get", "list", "create", "update"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["*"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval"]
  verbs: ["update"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  verbs: ["approve"]
- apiGroups: [""]
  resources: ["configmaps", "endpoints", "persistentvolumeclaims", "pods", "pods/exec", "pods/log", "pods/attach", "replicationcontrollers", "services", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "ingresses", "networkpolicies", "replicasets", "replicationcontrollers"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["controllerrevisions"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: userregistrationrequest
  name: edgenet:service:userregistrationrequest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:userregistrationrequest
subjects:
- kind: ServiceAccount
  name: userregistrationrequest
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: userregistrationrequest
  name: userregistrationrequest
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: userregistrationrequest
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: userregistrationrequest
    spec:
      containers:
      - command:
        - ./userregistrationrequest
        image: bsenel/userregistrationrequest:v1.0.0
        imagePullPolicy: Always
        name: userregistrationrequest
        volumeMounts:
        - name: configs
          readOnly: true
          mountPath: /root/configs/
        - name: kubeconfig
          readOnly: true
          mountPath: /root/.kube/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: userregistrationrequest
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: configs
        secret:
          secretName: configs-secret
      - name: kubeconfig
        secret:
          secretName: kubeconfig-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: vpnpeer
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: edgenet:service:vpnpeer
rules:
- apiGroups: ["networking.edgenet.io"]
  resources: ["vpnpeers", "vpnpeers/status"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: edgenet:service:vpnpeer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:vpnpeer
subjects:
- kind: ServiceAccount
  name: vpnpeer
  namespace: edgenet
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: vpnpeer
  namespace: edgenet
spec:
  selector:
    matchLabels:
      app: edgenet
      component: vpnpeer
  template:
    metadata:
      labels:
        app: edgenet
        component: vpnpeer
    spec:
      containers:
      - command:
        - ./vpnpeer
        image: bsenel/vpnpeer:v1.0.0
        imagePullPolicy: Always
        name: vpnpeer
      hostNetwork: true
      securityContext:
        capabilities:
          add:
            - NET_ADMIN
      priorityClassName: system-cluster-critical
      serviceAccountName: vpnpeer
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenet:namespace-reader
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenet:namespace-reader-all
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
- kind: User
  name: system:anonymous
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: edgenet:namespace-reader
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenet:node-reader
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenet:node-reader-all
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
- kind: User
  name: system:anonymous
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: edgenet:node-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edgenet:registration
rules:
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests", "userrequests"]
  verbs: ["create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get", "list"]
- apiGroups: ["registration.edgenet.io"]
  resources: ["emailverifications"]
  verbs: ["get", "update", "patch"]
- apiGroups: ["networking.edgenet.io"]
  resources: ["vpnpeers"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edgenet:registration:anonymous
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:registration
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:anonymous
- kind: ServiceAccount
  name: edgenet-public
  namespace: kube-system
