# Copyright 2022 Contributors to the EdgeNet project.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Namespace
metadata:
  name: edgenet
---
apiVersion: v1
kind: Secret
metadata:
  name: configs-secret
  namespace: edgenet
type: Opaque
stringData:
  namecheap.yaml: |
    # Provide the namecheap credentials for DNS records.
    # app: ""
    # apiUser : ""
    # apiToken : ""
    # username : ""
  # MaxMind GeoIP2 precision API keys
  maxmind-account-id: ""
  maxmind-license-key: ""
---
# Provide the Private and Public SSH keys of the control plane node to enable node contribution feature.
apiVersion: v1
kind: Secret
metadata:
  name: ssh-key-secret
  namespace: edgenet
type: Opaque
data:
  # id_rsa: <SSH Private Key of the control plane node>
  # id_rsa.pub: <SSH Public Key of the control plane node>
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodecontributions.core.edgenet.io
spec:
  group: core.edgenet.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .spec.host
        - name: Port
          type: integer
          jsonPath: .spec.port
        - name: Enabled
          type: boolean
          jsonPath: .spec.enabled
        - name: Status
          type: string
          jsonPath: .status.state
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - host
                - port
                - enabled
              properties:
                tenant:
                  type: string
                  nullable: true
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                host:
                  type: string
                port:
                  type: integer
                  minimum: 1
                user:
                  type: string
                  default: edgenet
                enabled:
                  type: boolean
                limitations:
                  type: array
                  nullable: true
                  items:
                    type: object
                    properties:
                      kind:
                        type: string
                        enum:
                          - Tenant
                          - Namespace
                      identifier:
                        type: string
                        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
            status:
              type: object
              properties:
                state:
                  type: string
                message:
                  type: string
  scope: Cluster
  names:
    plural: nodecontributions
    singular: nodecontribution
    kind: NodeContribution
    shortNames:
      - nc
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: vpnpeers.networking.edgenet.io
spec:
  group: networking.edgenet.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Address-V4
          type: string
          jsonPath: .spec.addressV4
        - name: Address-V6
          type: string
          jsonPath: .spec.addressV6
        - name: Endpoint
          type: string
          jsonPath: .spec.endpointAddress
        - name: Port
          type: string
          jsonPath: .spec.endpointPort
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - addressV4
                - addressV6
                - publicKey
              properties:
                addressV4:
                  type: string
                  pattern: '^[0-9.]+$'
                  description: The IPv4 address assigned to the node's VPN interface.
                addressV6:
                  type: string
                  pattern: '^[a-f0-9:]+$'
                  description: The IPv6 address assigned to the node's VPN interface.
                endpointAddress:
                  type: string
                  pattern: '^[a-f0-9.:]+$'
                  nullable: true
                  description: The public IPv4/v6 address of the node. Required for NAT-NAT communications.
                endpointPort:
                  type: integer
                  minimum: 1
                  nullable: true
                  description: The port on which WireGuard is listening. Required for NAT-NAT communications.
                publicKey:
                  type: string
                  description: The WireGuard public key of the node's VPN interface (Base64 encoded).
  scope: Cluster
  names:
    plural: vpnpeers
    singular: vpnpeer
    kind: VPNPeer
    shortNames:
      - vpn
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: nodecontribution
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: edgenet:service:nodecontribution
rules:
- apiGroups: ["core.edgenet.io"]
  resources: ["nodecontributions", "nodecontributions/status"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: edgenet:service:nodecontribution
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:nodecontribution
subjects:
- kind: ServiceAccount
  name: nodecontribution
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: nodecontribution
  name: nodecontribution
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: nodecontribution
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: nodecontribution
    spec:
      containers:
      - command:
        - ./nodecontribution
        image: edgenetio/nodecontribution:main
        imagePullPolicy: Always
        name: nodecontribution
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/ca.crt
          name: kubernetes
          readOnly: true
        - name: ssh
          readOnly: true
          mountPath: /edgenet/.ssh/
        - name: configs
          readOnly: true
          mountPath: /edgenet/configs/
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: nodecontribution
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
      volumes:
      - name: kubernetes
        hostPath:
          path: /etc/kubernetes/pki/ca.crt
          type: File
      - name: ssh
        secret:
          secretName: ssh-key-secret
      - name: configs
        secret:
          secretName: configs-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: nodelabeler
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: edgenet:service:nodelabeler
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "patch"]
- apiGroups: ["networking.edgenet.io"]
  resources: ["vpnpeers"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: edgenet:service:nodelabeler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:nodelabeler
subjects:
- kind: ServiceAccount
  name: nodelabeler
  namespace: edgenet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edgenet
    component: nodelabeler
  name: nodelabeler
  namespace: edgenet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenet
      component: nodelabeler
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: edgenet
        component: nodelabeler
    spec:
      containers:
      - command:
        - ./nodelabeler
        image: edgenetio/nodelabeler:main
        imagePullPolicy: Always
        name: nodelabeler
        env:
          - name: MAXMIND_ACCOUNT_ID
            valueFrom:
              secretKeyRef:
                name: configs-secret
                key: maxmind-account-id
          - name: MAXMIND_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: configs-secret
                key: maxmind-license-key
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      serviceAccountName: nodelabeler
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: vpnpeer
  namespace: edgenet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: edgenet:service:vpnpeer
rules:
- apiGroups: ["networking.edgenet.io"]
  resources: ["vpnpeers", "vpnpeers/status"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: edgenet:service:vpnpeer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:service:vpnpeer
subjects:
- kind: ServiceAccount
  name: vpnpeer
  namespace: edgenet
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: edgenet
    component: vpnpeer
  name: vpnpeer
  namespace: edgenet
spec:
  selector:
    matchLabels:
      app: edgenet
      component: vpnpeer
  template:
    metadata:
      labels:
        app: edgenet
        component: vpnpeer
    spec:
      containers:
      - command:
        - ./vpnpeer
        image: edgenetio/vpnpeer:main
        imagePullPolicy: Always
        name: vpnpeer
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
      hostNetwork: true
      priorityClassName: system-cluster-critical
      serviceAccountName: vpnpeer
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edgenet:registration
rules:
- apiGroups: ["registration.edgenet.io"]
  resources: ["tenantrequests", "userrequests"]
  verbs: ["create"]
- apiGroups: ["core.edgenet.io"]
  resources: ["tenants"]
  verbs: ["get", "list"]
- apiGroups: ["networking.edgenet.io"]
  resources: ["vpnpeers"]
  verbs: ["create", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edgenet:registration:anonymous
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edgenet:registration
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:anonymous
- kind: ServiceAccount
  name: edgenet-public
  namespace: kube-system